package org.ajdeveloppement.webserver.data;

import javax.annotation.Generated;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Map;
import java.util.HashMap;
import org.ajdeveloppement.commons.persistence.sql.QResults;
import org.ajdeveloppement.commons.persistence.sql.QField;
import org.ajdeveloppement.commons.persistence.ObjectPersistenceException;

@Generated(value="Generated by ajcommons")
@SuppressWarnings({"nls","javadoc"})
public class T_SessionData {
	public static final String TABLE_NAME = "AJWEBSERVER.SessionData";

	/**
	 * Object Binder for idSession field of table AJWEBSERVER.SessionData
	 */
	public static final QField<java.util.UUID> IDSESSION = new QField<>(TABLE_NAME,"idSession");

	/**
	 * Object Binder for data field of table AJWEBSERVER.SessionData
	 */
	public static final QField<org.ajdeveloppement.webserver.data.SessionData.DataWrapper<?>> DATA = new QField<>(TABLE_NAME,"data");

	/**
	 * Object Binder for expirationDate field of table AJWEBSERVER.SessionData
	 */
	public static final QField<java.util.Date> EXPIRATIONDATE = new QField<>(TABLE_NAME,"expirationDate");

	/**
	 * Return all instance in database as QResults iterator
	 */
	public static QResults<SessionData, Void> all() {
		return QResults.from(SessionData.class);
	}

	public static SessionData getInstanceWithPrimaryKey(java.util.UUID idsession) {
		return QResults.from(SessionData.class).where(IDSESSION.equalTo(idsession)).first();
	}

	public static Map<String, Object> getPrimaryKeyMap(ResultSet rs) throws SQLException, ObjectPersistenceException {
		return getPrimaryKeyMap(getPrimaryKeyValues(rs));
	}

	public static Map<String, Object> getPrimaryKeyMap(Object... pkValues) {
		if(pkValues == null || pkValues.length != 1)
			return null;

		Map<String, Object> persistenceInformations = new HashMap<String, Object>();
		persistenceInformations.put("IdSession",pkValues[0]);
		return persistenceInformations;
	}

	public static Object[] getPrimaryKeyValues(ResultSet rs) throws SQLException, ObjectPersistenceException {
		Object[] pkValues = new Object[] {
			IDSESSION.getValue(rs)
		};
		return pkValues;
	}
}